---
- name: Discover user's already installed extensions
  command: "code --list-extensions"
  register: find_installed_extensions
  changed_when: False
  loop_control:
    label: "{{ item.user }}"
  become: yes
  become_user: "{{ item.user }}"
  with_items: "{{ vscode_extensions }}"
- name: Set discovered extensions as fact for later use
  # we are creating a dict of username -> installed extensions here
  set_fact:
    installed_extensions: "{{ installed_extensions|default({}) | combine( { item.item.user: item.stdout } ) }}"
  loop_control:
    label: "{{ item.item.user }}"
  with_items: "{{ find_installed_extensions.results }}"

- name: Install Extensions for user(s)
  command: "code --install-extension '{{ item.1 }}'"
  with_subelements:
    - "{{ vscode_extensions }}"
    - extensions
    - skip_missing: yes
  become: yes
  become_user: "{{ item.0.user }}"
  when: installed_extensions is not defined or item.1 not in installed_extensions[item.0.user]
